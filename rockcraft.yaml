# Metadata section

name: rawfile-localpv
summary: RawFilePV
description: Kubernetes LocalPVs on Steroids
version: "0.8.2-ck1"
license: Apache-2.0

base: bare
build-base: ubuntu@24.04
platforms:
  amd64:
  arm64:

services:
  rawfile:
    override: replace
    command: python3 /app/rawfile.py [ csi-driver ]
    startup: enabled
    environment:
      PYTHONUNBUFFERED: "1"
    working-dir: "/app"

parts:
  btrfsutil:
    plugin: nil
    build-packages:
      - build-essential
      - libbtrfsutil-dev
      - python3
    override-build: |-
      pip wheel -w wheels/ "https://github.com/kdave/btrfs-progs/archive/refs/tags/v6.3.2.tar.gz#egg=btrfsutil&subdirectory=libbtrfsutil/python"
    override-stage: |-
      mkdir -p $CRAFT_STAGE/wheels/
      rm -rf $CRAFT_STAGE/wheels/wheels.txt
      find $CRAFT_PART_BUILD/wheels -name \*.whl -exec cp {} $CRAFT_STAGE/wheels/ \;
      for wheel in $CRAFT_STAGE/wheels/*.whl; do
        echo $wheel >> $CRAFT_STAGE/wheels/wheels.txt
      done
  rawfile-deps:
    after: [btrfsutil]
    plugin: python
    source: .
    build-environment:
      - PIP_NO_CACHE_DIR: "1"
    python-requirements:
      - $CRAFT_STAGE/wheels/wheels.txt
      - ./requirements.txt
    stage-packages:
      - libc6
      - e2fsprogs
      - btrfs-progs
      - libbtrfsutil1
      - xfsprogs
      - python3-venv
      - dash
      - mount
      - coreutils
      - util-linux
    override-build: |
      ln -sf /usr/bin/sh "$CRAFT_PART_INSTALL/bin/sh"
      if [ $CRAFT_ARCH_BUILD_FOR = "amd64" ]; then
        mkdir -p $CRAFT_PART_INSTALL/lib64
        ln -sf /usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2 "$CRAFT_PART_INSTALL/lib64/ld-linux-x86-64.so.2"
      else
        mkdir -p $CRAFT_PART_INSTALL/lib/aarch64-linx-gnu
        # HACK: gets the aarch64 linker into the bare based image
        # Copies the linker from the rockcraft build container to the install directory
        cp /lib/aarch64-linux-gnu/ld-linux-aarch64.so.1 "$CRAFT_PART_INSTALL/lib/aarch64-linux-gnu/ld-linux-aarch64.so.1"
        ln -sf /lib/aarch64-linux-gnu/ld-linux-aarch64.so.1 "$CRAFT_PART_INSTALL/lib/ld-linux-aarch64.so.1"
      fi
      craftctl default
  rawfile:
    after: [rawfile-deps]
    plugin: dump
    source: .
    organize:
      csi: app/csi/
      orchestrator: app/orchestrator
      protos: app/protos
      templates: app/templates
      "*.py": app/
    prime:
      # exclude repo layer files from the final image
      - "-.*/"
      - "-__pycache__/"
      - "-deploy/"
      - "-tests/"
