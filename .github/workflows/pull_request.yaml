name: Push Multiarch Image
on:
  pull_request:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  dockerfile-wrapper:
    runs-on: ubuntu-latest
    outputs:
      dockerfile-wrapper: ${{ steps.dockerfile-wrapper.outputs.dockerfile-wrapper }}
    steps:
      - name: Get b64 Dockerfile wrapper (Rockcraft workaround)
        id: dockerfile-wrapper
        run: |
          set -ex
          cat <<EOF > ./dockerfile_wrapper
          ARG IMAGE_TAG
          ARG IMAGE_REPOSITORY
          ENV IMAGE_REPOSITORY=\${IMAGE_REPOSITORY}
          ENV IMAGE_TAG=\${IMAGE_TAG}
          ENTRYPOINT ["/usr/bin/env", "python3", "/app/rawfile.py"]
          CMD ["csi-driver"]
          EOF

          b64_dockerfile=$(cat ./dockerfile_wrapper | base64 -w0)
          echo "dockerfile-wrapper=$b64_dockerfile" >> "$GITHUB_OUTPUT"

  build-and-push-arch-specifics:
    name: Build Rocks and Push Arch Specific Images
    uses: canonical/k8s-workflows/.github/workflows/build_rocks.yaml@lpetrut/b64_dockerfile
    needs: [dockerfile-wrapper]
    with:
      owner: ${{ github.repository_owner }}
      trivy-image-config: "trivy.yaml"
      multiarch-awareness: true
      cache-action: ${{ (github.event_name == 'push') && 'save' || 'restore' }}
      platform-labels: '{"arm64": ["self-hosted-linux-arm64-jammy-large"]}'
      dockerfile-wrapper-b64: ${{ needs.dockerfile-wrapper.outputs.dockerfile-wrapper }}

  run-tests:
    uses: canonical/k8s-workflows/.github/workflows/run_tests.yaml@main
    needs: [build-and-push-arch-specifics]
    secrets: inherit
    with:
      rock-metas: ${{ needs.build-and-push-arch-specifics.outputs.rock-metas }}
  scan-images:
    uses: canonical/k8s-workflows/.github/workflows/scan_images.yaml@main
    needs: [build-and-push-arch-specifics]
    secrets: inherit
    with:
      upload-result: ${{ github.event_name == 'push' }}
      images: ${{ needs.build-and-push-arch-specifics.outputs.images }}
      trivy-image-config: ./trivy.yaml
  build-and-push-multiarch-manifest:
    name: Combine Rocks and Push Multiarch Manifest
    uses: canonical/k8s-workflows/.github/workflows/assemble_multiarch_image.yaml@main
    needs: [build-and-push-arch-specifics]
    if: ${{ needs.build-and-push-arch-specifics.outputs.changed-rock-metas != '[]' }}
    with:
      rock-metas: ${{ needs.build-and-push-arch-specifics.outputs.changed-rock-metas }}
      dry-run: ${{ github.event_name != 'push' }}
